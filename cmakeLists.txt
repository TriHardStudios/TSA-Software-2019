#Acrylic2D Main_Debug
cmake_minimum_required(VERSION 3.12)

project(Acrylic2D)

set(CMAKE_CXX_STANDARD 17)

set(SOURCE_FILES DocumentationDemo.cpp)
set(HEADER_FILES)

#Add all sub projects
#include TriHard Studios Helper Libs
include_directories(Acrylic_Backend/BackendAPIs/BackendAPIs/required/trihardstudios/include)

#Include OpenGL
include_directories(Acrylic_Backend/BackendAPIs/Plexi2DRenderer/GraphicsAPIs/required/glad/include)

#Include GLM
include_directories(Acrylic_Backend/BackendAPIs/Plexi2DRenderer/GraphicsAPIs/required/glm/include)

#Include GLFW3
include_directories(Acrylic_Backend/BackendAPIs/BackendAPIs/required/GLFW3/include)

#Inlcude FreeType for font loading and rastiation
include_directories(Acrylic_Backend/BackendAPIs/required/FreeType/include)

#add_subdirectory(Entity_Layer)
add_subdirectory(Acrylic_Backend)

include_directories(Acrylic_Backend)

#Sub Project Includes
if(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
    add_compile_definitions(MACOS)

elseif(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
    #We have to do this because windows doesn't havea central include directory

    #Disable MSVC Bullshit
    SET( CMAKE_SHARED_LINKER_FLAGS ${CMAKE_SHARED_LINKER_FLAGS} "/NODEFAULTLIBS:MSVCRT /NODEFAULTLIB:library" )

    add_compile_definitions(WINDOWS)

elseif(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
    message(AUTHOR_WARNING "Building on Linux has not been tested. Please use macOS or Windows to build")

    add_compile_definitions(LINUX)

else()
    message(FATAL_ERROR "Unable to detect operating system. Build halted")
endif()

#Lib Includes

add_executable(Acrylic2D ${SOURCE_FILES} ${HEADER_FILES})

target_link_libraries(Acrylic2D AcrylicEngine)

#find_package(PNG REQUIRED)
#include_directories(${PNG_INCLUDE_DIR})
#target_link_libraries(${MY_EXEC} ${PNG_LIBRARY})

## search for pkg-config
#include (FindPkgConfig)
#if (NOT PKG_CONFIG_FOUND)
#    message (FATAL_ERROR "pkg-config not found")
#endif ()
#
## check for libpng
#pkg_check_modules (LIBPNG libpng16 REQUIRED)
#if (NOT LIBPNG_FOUND)
#    message(FATAL_ERROR "You don't seem to have libpng16 development libraries installed")
#else ()
#    include_directories (${LIBPNG_INCLUDE_DIRS})
#    link_directories (${LIBPNG_LIBRARY_DIRS})
#    link_libraries (${LIBPNG_LIBRARIES})
#endif ()
#add_executable (app_png ${_MYSOURCES} ${LIBPNG_LINK_FLAGS})